/*
 * BSD License
 *
 * Copyright (c) Lydia Zoghbi 2019
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
/**
 *  @file       testPublisher.cpp
 *  @author     Lydia Zoghbi
 *  @copyright  Copyright BSD License
 *  @date       11/11/2019
 *  @version    1.0
 *
 *  @brief      Test file for the ENPM808X ROS Assignment
 *
 */

#include <gtest/gtest.h>
#include <ros/ros.h>
#include <ros/service_client.h>
#include <beginner_tutorials/string_modifier.h>
#include <tf/transform_listener.h>

/**
 *  @brief      Test function
 *
 *  @param      None
 *
 *  @return     None
 */
TEST(TestSuite, test_ServiceOutput) {
// Initiate node handle
  ros::NodeHandle n;
// Begin service client
  ros::ServiceClient client = n.serviceClient<beginner_tutorials::string_modifier>("string_modifier");
  beginner_tutorials::string_modifier srv;
// Send string request to modify the original one
  srv.request.input = "see if it works";
// Call the client
  client.call(srv);
// Compare actual output to expected one
  EXPECT_STREQ("see if it works", srv.response.output.c_str());
}

/**
 *  @brief      Run all the tests that were declared with TEST()
 *
 *  @param      None
 *
 *  @return     Returns a 0 if tests are successful
 */
int main(int argc, char **argv) {
  testing::InitGoogleTest(&argc, argv);
  ros::init(argc, argv, "testPublisher");
  return RUN_ALL_TESTS();
}
